<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Eight million pixels and counting</title><link href="https://nical.github.io/" rel="alternate"></link><link href="https://nical.github.io/feeds/all.atom.xml" rel="self"></link><id>https://nical.github.io/</id><updated>2019-05-28T00:00:00+02:00</updated><entry><title>A look at pathfinder</title><link href="https://nical.github.io/posts/a-look-at-pathfinder.html" rel="alternate"></link><published>2019-05-28T00:00:00+02:00</published><author><name>Nical</name></author><id>tag:nical.github.io,2019-05-28:/posts/a-look-at-pathfinder.html/</id><summary type="html">&lt;p&gt;This post is about &lt;a href="https://github.com/pcwalton/pathfinder"&gt;pathfinder&lt;/a&gt;, a GPU vector graphics renderer written in Rust by Patrick Walton as part of his work in the emerging technologies team at Mozilla. While I have followed this work very closely, I have contributed very little code to pathfinder so the credit really goes to …&lt;/p&gt;</summary></entry><entry><title>Lyon in 2018</title><link href="https://nical.github.io/posts/lyon-2018.html" rel="alternate"></link><published>2019-02-17T00:00:00+01:00</published><author><name>Nical</name></author><id>tag:nical.github.io,2019-02-17:/posts/lyon-2018.html/</id><summary type="html">&lt;p&gt;&lt;a href="https://crates.io/crates/lyon"&gt;&lt;img alt="crate" src="https://meritbadge.herokuapp.com/lyon"&gt;&lt;/a&gt;
&lt;a href="https://docs.rs/lyon"&gt;&lt;img alt="doc" src="https://docs.rs/lyon/badge.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About a year ago I published &lt;a href="https://nical.github.io/posts/lyon-intro.html"&gt;
"Introduction to lyon: 2D vector graphics rendering on the GPU in rust"
&lt;/a&gt; on this blog. Lyon was in version &lt;a href="https://docs.rs/lyon/0.8.8/lyon/"&gt;&lt;code&gt;0.8.8&lt;/code&gt;&lt;/a&gt; back then and I recently published &lt;a href="https://docs.rs/lyon/0.13.0/lyon/"&gt;&lt;code&gt;0.13.0&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In 2018 my activity on the project has varied depending on the time …&lt;/p&gt;</summary></entry><entry><title>2d graphics in Rust discussion - A look at GPU memory management</title><link href="https://nical.github.io/posts/rust-2d-graphics-02.html" rel="alternate"></link><published>2018-10-28T00:00:00+02:00</published><author><name>Nical</name></author><id>tag:nical.github.io,2018-10-28:/posts/rust-2d-graphics-02.html/</id><summary type="html">&lt;p&gt;In this post I'll write about an piece of the low level details of an hypothetical rust 2d graphics crate built on top of &lt;a href="https://github.com/gfx-rs/gfx"&gt;gfx-hal&lt;/a&gt;. Gfx provides a vulkan-like interface implemented on top of vulkan, d3d12, metal or flavors of OpenGL. just like the &lt;a href="https://nical.github.io/posts/rust-2d-graphics-01.html"&gt;previous post&lt;/a&gt; this is in the …&lt;/p&gt;</summary></entry><entry><title>Following up on the 2d graphics in Rust discussion</title><link href="https://nical.github.io/posts/rust-2d-graphics-01.html" rel="alternate"></link><published>2018-10-14T00:00:00+02:00</published><author><name>Nical</name></author><id>tag:nical.github.io,2018-10-14:/posts/rust-2d-graphics-01.html/</id><summary type="html">&lt;p&gt;Raph Levien recently published &lt;a href="https://raphlinus.github.io/rust/graphics/2018/10/11/2d-graphics.html"&gt;A crate I want: 2d graphics&lt;/a&gt; on his blog, which started some interesting discussions &lt;a href="https://www.reddit.com/r/rust/comments/9nhhh8/a_crate_i_want_2d_graphics/"&gt;on reddit&lt;/a&gt;. At the same time there is a nascent discussion on the &lt;a href="https://github.com/draw2d/rfcs/issues/1"&gt;draw2d&lt;/a&gt; repository (which doesn't have any code at this point) about a potential 2d graphics crate.&lt;/p&gt;
&lt;p&gt;These discussions contain …&lt;/p&gt;</summary></entry><entry><title>RustFest Paris - Part 2 - Path rendering challenges</title><link href="https://nical.github.io/posts/rustfest-paris-02.html" rel="alternate"></link><published>2018-06-19T00:00:00+02:00</published><author><name>Nical</name></author><id>tag:nical.github.io,2018-06-19:/posts/rustfest-paris-02.html/</id><summary type="html">&lt;p&gt;This is the second part of a series about the talk I gave at &lt;a href="https://paris.rustfest.eu/"&gt;RustFest Paris&lt;/a&gt; about &lt;a href="https://github.com/nical/lyon"&gt;lyon&lt;/a&gt;, a crate that helps you render vector graphics on the GPU in Rust.&lt;/p&gt;
&lt;p&gt;The recordings can be found &lt;a href="https://app.media.ccc.de/v/rustfest18-7-vector_graphics_rendering_on_the_gpu_in_rust_with_lyon"&gt;here&lt;/a&gt; or on &lt;a href="https://www.youtube.com/watch?v=2Ng5kpDirDI&amp;amp;list=PL85XCvVPmGQgdqz9kz6qH3SI_hp7Zb4s1&amp;amp;index=7"&gt;YouTube&lt;/a&gt; if you prefer.&lt;/p&gt;
&lt;p&gt;Previous episode:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="rustfest-paris-01.html"&gt;Part 1 - Intro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;The problem …&lt;/h1&gt;</summary></entry><entry><title>RustFest Paris - Part 1 - Intro</title><link href="https://nical.github.io/posts/rustfest-paris-01.html" rel="alternate"></link><published>2018-06-18T00:00:00+02:00</published><author><name>Nical</name></author><id>tag:nical.github.io,2018-06-18:/posts/rustfest-paris-01.html/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;RustFest organizer: "Are you ready?"&lt;/p&gt;
&lt;p&gt;Me: "Almost."&lt;/p&gt;
&lt;p&gt;(reinstalling Xorg on my laptop 20 minutes before the talk because the window manager would not start)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I gave a talk about &lt;a href="https://github.com/nical/lyon"&gt;lyon&lt;/a&gt; at &lt;a href="https://paris.rustfest.eu/"&gt;RustFest Paris&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The recordings are already online, so you can watch it &lt;a href="https://app.media.ccc.de/v/rustfest18-7-vector_graphics_rendering_on_the_gpu_in_rust_with_lyon"&gt;here&lt;/a&gt; or on &lt;a href="https://www.youtube.com/watch?v=2Ng5kpDirDI&amp;amp;list=PL85XCvVPmGQgdqz9kz6qH3SI_hp7Zb4s1&amp;amp;index=7"&gt;YouTube&lt;/a&gt; if you prefer …&lt;/p&gt;</summary></entry><entry><title>Introduction to lyon: 2D vector graphics rendering on the GPU in rust</title><link href="https://nical.github.io/posts/lyon-intro.html" rel="alternate"></link><published>2018-01-22T00:00:00+01:00</published><author><name>Nical</name></author><id>tag:nical.github.io,2018-01-22:/posts/lyon-intro.html/</id><summary type="html">&lt;p&gt;&lt;a href="https://crates.io/crates/lyon"&gt;&lt;img alt="crate" src="https://meritbadge.herokuapp.com/lyon"&gt;&lt;/a&gt;
&lt;a href="https://docs.rs/lyon"&gt;&lt;img alt="doc" src="https://docs.rs/lyon/badge.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nical/lyon"&gt;Lyon&lt;/a&gt; is a side-project that I have been working on for quite a while. The goal is to play with rendering 2D vector graphics on the GPU, and it's been a lot of fun so far. I haven't talked a lot about it online (except for a couple of reddit …&lt;/p&gt;</summary></entry></feed>